/**
 * Author:  luiscarlosss
 * Created: 05/07/2019
 */

DELIMITER $
CREATE PROCEDURE NOME()
BEGIN
    ACAO;
END
$

CREATE PROCEDURE CONTA()
BEGIN
    SELETC 10 + 10 AS "CONTA";
END
$

/* CHAMANDO A PROCEDURE */

DELIMITER ;

CALL CONTA();

/* PROCEDURE COM PARAMETROS */

DROP PROCEDURE CONTA;

DELIMITER $

CREATE PROCEDURE CONTA(NUMERO1 INT, NUMERO2 INT)
BEGIN
    SELECT NUMERO1 + NUMERO2 AS "CONTA";
END
$

DELIMITER ;

CALL CONTA(100,78);
CALL CONTA(100,78754);
CALL CONTA(1025480,78754);

/* PROCEDURES COM TABELAS */

CREATE TABLE CURSOS(
    IDCURSO INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(30) NOT NULL,
    HORAS INT(3) NOT NULL,
    VALOR FLOAT(10,2) NOT NULL
);

INSERT INTO CURSOS VALUES (NULL, 'BANCO DE DADOS FUNDAMENTAL', 25, 200.00);
SELECT * FROM CURSOS;

/* DELIMITADOR */

DELIMITER |

CREATE PROCEDURE CAD_CURSO(P_NOME VARCHAR(30), P_HORAS INT(3), P_PRECO FLOAT(10,2))
BEGIN
    INSERT INTO CURSOS VALUES (NULL, P_NOME, P_HORAS, P_PRECO);
END
|

DELIMITER ;

USE `UDEMY`;
CALL CAD_CURSO('BI SLQ SERVER', 35, 200.00);

DELIMITER #

CREATE PROCEDURE SEL_CURSO()
BEGIN
    SELECT IDCURSO, NOME, HORAS, VALOR
    FROM CURSOS;
END
#

DELIMITER ;

CAL SEL_CURSO();

/* A29 FUNCOES DE AGREGACAO NUMERICAS */

CREATE TABLE VENDEDORES(
    IDVENDEDOR INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(30),
    SEXO CHAR(1),
    JANEIRO FLOAT(10,2),
    FEVEREIRO FLOAT(10,2),
    MARCO FLOAT(10,2)
);

INSERT INTO VENDEDORES VALUES (NULL, 'CARLOS', 'M', 4654.54, 5649.52, 6546.69);
INSERT INTO VENDEDORES VALUES (NULL, 'MARIA', 'F', 5654.85, 564.85, 548.98);
INSERT INTO VENDEDORES VALUES (NULL, 'ANTONIO', 'M', 546.92, 6546.25, 5646.97);
INSERT INTO VENDEDORES VALUES (NULL, 'CLARA', 'F', 165.21, 5685.36, 32165.23);
INSERT INTO VENDEDORES VALUES (NULL, 'ANDERSON', 'M', 464.32, 215.14, 21654.12);
INSERT INTO VENDEDORES VALUES (NULL, 'IVONE', 'F', 1654.14, 3265.47, 1654.23);
INSERT INTO VENDEDORES VALUES (NULL, 'JOAO', 'M', 126.47, 24165.21, 123.78);
INSERT INTO VENDEDORES VALUES (NULL, 'CELIA', 'F', 146.54, 1238.85, 415.45);

/* MAX - TRAZ O VALOR MAXIMO DE UMA COLUNA */

SELECT MAX(FEVEREIRO) AS MAIOR_FEV
FROM VENDEDORES;

/* MIN - TRAZ O VALOR MINIMO DE UMA COLUNA */

SELECT MIN(FEVEREIRO) AS MENOR_FEV
FROM VENDEDORES;

/* AVG - TRAZ O VALOR MEDIO DE UMA COLUNA */

SELECT AVG(FEVEREIRO) AS MENDIA_FEV
FROM VENDEDORES;

/* VARIAS FUNCOES */

SELECT MAX(JANEIRO) AS MAX_JAN,
       MIN(JANEIRO) AS MIN_JAN,
       AVG(JANEIRO) AS MEDIA_JAN
FROM VENDEDORES;

/* TRUNCATE */

SELECT MAX(JANEIRO) AS MAX_JAN,
       MIN(JANEIRO) AS MIN_JAN,
       TRUNCATE(AVG(JANEIRO),2) AS MEDIA_JAN
FROM VENDEDORES;

/* A30 - AGREGANDO COM SUM() */

SELECT SUM(JANEIRO) AS TOTAL_JAN,
       SUM(FEVEREIRO) AS TOTAL_FEV,
       SUM(MARCO) AS TOTAL_MAR,
FROM VENDEDORES;

/* VENDAS POR SEXO */

SELECT SEXO, SUM(MARCO) AS TOTAL_MARCO
FROM VENDEDORES
GROUP BY SEXO;

/* A 31 - SUBQUERIES
   VENDEDOR QUE VENDEU MENOS EM MARCO E O SEU NOME
   NOME E O VALOR QUE VENDEU MAIS EM MARCO
   QUEM VENDEU MAIS QUE O VALOR MEDIO DE FEV
*/

SELECT NOME, MIN(MARCO) AS MIN_MARCO
FROM VENDEDORES;

SELECT * FROM VENDEDORES;

SELECT MIN(MARCO) FROM VENDEDORES;

SELECT NOME, MARCO FROM VENDEDORES
WHERE MARCO = (SELECT MIN(MARCO) FROM VENDEDORES);

SELECT NOME, MARCO FROM VENDEDORES
WHERE MARCO = (SELECT MAX(FEVEREIRO) FROM VENDEDORES);

SELECT NOME, MARCO FROM VENDEDORES
WHERE MARCO > (SELECT AVG(MARCO) FROM VENDEDORES);

SELECT NOME, FEVEREIRO FROM VENDEDORES
WHERE FEVEREIRO > (SELECT AVG(FEVEREIRO) FROM VENDEDORES);

SELECT NOME, FEVEREIRO FROM VENDEDORES
WHERE FEVEREIRO < (SELECT AVG(FEVEREIRO) FROM VENDEDORES);

CREATE DATABASE IF NOT EXISTS db_projeto;

USE db_projeto;

CREATE TABLE CLIENTE(
IDCLIENTE INT AUTO_INCREMENT,
NOME VARCHAR(30) NOT NULL,
SEXO ENUM('M', 'F') NOT NULL,
ID_CARRO INT UNIQUE,
PRIMARY KEY(IDCLIENTE)
);

CREATE TABLE TELEFONE(
IDTELEFONE INT AUTO_INCREMENT PRIMARY KEY,
TIPO ENUM('CEL', 'RES', 'COM') NOT NULL,
NUMERO VARCHAR(30) NOT NULL,
ID_CLIENTE INT
);

CREATE TABLE MARCA(
IDMARCA INT AUTO_INCREMENT PRIMARY KEY,
MARCA VARCHAR(30) UNIQUE
);

CREATE TABLE CARRO(
IDCARRO INT AUTO_INCREMENT PRIMARY KEY,
MODELO VARCHAR(30) NOT NULL,
PLACA VARCHAR(30) NOT NULL UNIQUE,
ID_MARCA INT
);

CREATE TABLE COR(
IDCOR INT AUTO_INCREMENT PRIMARY KEY,
COR VARCHAR(30) UNIQUE
);

CREATE TABLE CARRO_COR(
ID_CARRO INT,
ID_COR INT,
PRIMARY KEY(ID_CARRO, ID_COR)
);

/* CONSTRAINTS */

ALTER TABLE TELEFONE
ADD CONSTRAINT FK_TELEFONE_CLIENTE
FOREIGN KEY(ID_CLIENTE)
REFERENCES CLIENTE(IDCLIENTE);

ALTER TABLE CLIENTE
ADD CONSTRAINT FK_CLIENTE_CARRO
FOREIGN KEY(ID_CARRO)
REFERENCES CARRO(IDCARRO);

ALTER TABLE CARRO
ADD CONSTRAINT FK_CARRO_MARCA
FOREIGN KEY(ID_MARCA)
REFERENCES MARCA(IDMARCA);

ALTER TABLE CARRO_COR
ADD CONSTRAINT FK_COR
FOREIGN KEY(ID_COR)
REFERENCES COR(IDCOR);

ALTER TABLE CARRO_COR
ADD CONSTRAINT FK_CARRO
FOREIGN KEY(ID_CARRO)
REFERENCES CARRO(IDCARRO);

INSERT INTO CARRO VALUES (NULL, '');

/* ESTRUTURA DE UMA TRIGGER */

CREATE TRIGGER NOME
BEFORE/AFTER INSERT/DELETE/UPDATE ON TABELA
FOR EACH ROW (PARA CADA LINHA)
BEGIN -> INICIO

QUALQUER COMANDO SQL

END -> FIM

CREATE DATABASE AULA40;

USE AULA40;

CREATE TABLE USUARIO(
IDUSUARIO INT AUTO_INCREMENT PRIMARY KEY,
NOME VARCHAR(30),
NOME VARCHAR(30),
NOME VARCHAR(100)
);

CREATE TABLE BKP_USUARIO(
IDBACKUP INT AUTO_INCREMENT PRIMARY KEY,
IDUSUARIO INT,
NOME VARCHAR(30),
LOGIN VARCHAR(30)
);

INSERT INTO USUARIO VALUES (NULL, 'ANDRADE', 'ANDRADE2009', 'HEXACAMPEAO');

DELETE FROM USUARIO WHERE IDUSUARIO = 1;

/* A 41 - COMUNICAÇÃO ENTRE BANCOS */

CREATE DATABASE LOJA;

USE LOJA;

CREATE TABLE PRODUTO(
IDPRODUTO INT AUTO_INCREMENT PRIMARY KEY,
NOME VARCHAR(30),
VALOR FLOAT(10,2)
);

CREATE DATABASE BACKUP;

USE BACKUP;

CREATE TABLE BKP_PRODUTO(
IDBKP INT  AUTO_INCREMENT PRIMARY KEY,
IDPRODUTO INT,
NOME VARCHAR(30),
VALOR FLOAT(10,2)
);


USE LOJA;

INSERT INTO BACKUP.BKP_PRODUTO VALUES (NULL, 1000, 'TESTE', 0.0);

DELIMITER $

CREATE TRIGGER BACKUP_PRODUT
BEFORE INSERT ON PRODUTO
FOR EACH ROW
BEGIN
    INSERT INTO BACKUP.BKP_PRODUTO VALUES (NULL, NEW.IDPRODUTO, NEW.NOME, NEW.VALOR);
END
$

DELIMITER ;

INSERT INTO PRODUTO VALUES (NULL, 'LIVRO MODELAGEM', 50.00);
INSERT INTO PRODUTO VALUES (NULL, 'LIVRO BI', 80.00);
INSERT INTO PRODUTO VALUES (NULL, 'LIVRO ORACLE', 80.00);
INSERT INTO PRODUTO VALUES (NULL, 'LIVRO SQL SERVER', 100.00);

SELECT * FROM BACKUP.BKP_PRODUTO;

DELIMITER $

CREATE TRIGGER BACKUP_PRODUT_DEL
BEFORE DELETE ON PRODUTO
FOR EACH ROW
BEGIN
    INSERT INTO BACKUP.BKP_PRODUTO VALUES (NULL, OLD.IDPRODUTO, OLD.NOME, OLD.VALOR);
END
$

DELIMITER ;

DELETE FROM PRODUTO WHERE IDPRODUTO = 2;

SELECT * FROM BACKUP.BKP_PRODUTO;

DROP TRIGGER BACKUP_PRODUT;

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO
AFTER INSERT ON PRODUTO
FOR EACH ROW
BEGIN
    INSERT INTO BACKUP.BKP_PRODUTO VALUES (NULL, NEW.IDPRODUTO, NEW.NOME, NEW.VALOR);
END
$

DELIMITER ;

SELECT * FROM PRODUTO;
SELECT * FROM BACKUP.BKP_PRODUTO;

ALTER TABLE BACKUP.BKP_PRODUTO
ADD EVENTO CHAR(1);

DROP TRIGGER BACKUP_PRODUTO_DEL;

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO_DEL
BEFORE DELETE ON BKP_PRODUTO
FOR EACH ROW
BEGIN
    INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL, OLD.IDPRODUTO, OLD.NOME, 
    OLD.VALOR, 'D');
END
$

DELIMITER ;

DELETE FROM BKP_PRODUTO WHERE IDPRODUTO = 4;

SELECT * FROM BACKUP.BKP_PRODUTO;

/* A 42 - TRIGGER DE AUDITORIA */

DELIMITER ;

DROP DATABASE LOJA;

DROP DATABASE BACKUP;

CREATE DATABASE LOJA;

USE LOJA;

CREATE TABLE PRODUTO(
    IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(30),
    VALOR FLOAT(10,2)
);

INSERT INTO PRODUTO VALUES (NULL, 'LIVRO MODELAGEM', 50.00);
INSERT INTO PRODUTO VALUES (NULL, 'LIVRO BI', 80.00);
INSERT INTO PRODUTO VALUES (NULL, 'LIVRO ORACLE', 70.00);
INSERT INTO PRODUTO VALUES (NULL, 'LIVRO SQL SERVER', 100.00);

/* QUANDO */
SELECT NOW();

/* QUEM */
SELECT CURRENT_USER();

CREATE DATABASE BACKUP;

USE BACKUP;

CREATE TABLE BKP_PRODUTO(
    IDBACKUP INT PRIMARY KEY AUTO_INCREMENT,
    IDPRODUTO INT,
    NOME VARCHAR(30),
    VALOR_ORIGINAL FLOAT(10,2),
    VALOR_ALTERADO FLOAT(10,2),
    DATA DATETIME,
    USUARIO VARCHAR(30),
    EVENTO CHAR(1)
);

USE LOJA;

SELECT * FROM PRODUTO;

DELIMITER $

CREATE TRIGGER AUDIT_PROD
AFTER UPDATE ON PRODUTO
FOR EACH ROW
BEGIN
    INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL, OLD.IDPRODUTO, OLD.NOME, OLD.VALOR, 
    NEW.VALOR, NOW(), CURRENT_USER(), 'U');
END
$

DELIMITER ;

UPDATE PRODUTO SET VALOR = 110.00
WHERE IDPRODUTO = 4;

SELECT * FROM PRODUTO;

SELECT * FROM BACKUP.BKP_PRODUTO;

/* A 43 - AUTORELACIONAMENTO */

CREATE DATABASE AULA43;
USE AULA43;

CREATE TABLE CURSOS(
    IDCURSO INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(30),
    HORAS INT,
    VALOR FLOAT(10,2),
    ID_PREREQ INT
);

ALTER TABLE CURSOS ADD CONSTRAINT FK_PREREQ
FOREIGN KEY(ID_PREREQ) REFERENCES CURSOS(IDCURSO);

INSERT INTO CURSOS VALUES (NULL, 'BD RELACIONAL', 20, 400.00, NULL);
INSERT INTO CURSOS VALUES (NULL, 'BUSINESS INTELLIGENCE', 40, 800.00, 1);
INSERT INTO CURSOS VALUES (NULL, 'RELATORIOS AVANCADOS', 20, 600.00, 2);
INSERT INTO CURSOS VALUES (NULL, 'LOGICA PROGRAM', 20, 400.00, NULL);
INSERT INTO CURSOS VALUES (NULL, 'RUBY', 30, 500.00, 4);

SELECT * FROM CURSOS;

SELECT NOME, VALOR, HORAS, IFNULL(ID_PREREQ, "SEM REQ") REQUISITO FROM CURSOS;

 /* NOME, VALOR, HORAS, E O NOME DO PRE REQUISITO DO CURSO */

SELECT 
C.NOME AS CURSO, 
C.VALOR AS VALOR, 
C.HORAS AS CARGA, 
IFNULL(P.NOME, "---") AS PREREQ
FROM CURSOS C LEFT JOIN CURSOS P
ON P.IDCURSO = C.ID_PREREQ;

/* A 44 - CURSORES */